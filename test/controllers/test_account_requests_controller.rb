# thing_space_connectivity_management_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class AccountRequestsControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    token = OAuth2.authorize config
    config = config().clone_with o_auth_token: token

    @response_catcher = HttpResponseCatcher.new
    @controller = AccountRequestsController.new config, http_call_back: @response_catcher
  end

  # Returns the current status of an asynchronous request that was made for a single device.
  def test_get_current_asynchronous_request_status()
    # Parameters for the API call
    aname = '0252012345-00001'
    request_id = '86c83330-4bf5-4235-9c4e-a83f93aeae4c'

    # Perform the API call through the SDK function
    result = @controller.get_current_asynchronous_request_status(aname, request_id)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"requestId":"86c83330-4bf5-4235-9c4e-a83f93aeae4c","status":"Success"}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

end
