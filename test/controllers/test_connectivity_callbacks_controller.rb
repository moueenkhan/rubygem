# thing_space_connectivity_management_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class ConnectivityCallbacksControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    token = OAuth2.authorize config
    config = config().clone_with o_auth_token: token

    @response_catcher = HttpResponseCatcher.new
    @controller = ConnectivityCallbacksController.new config, http_call_back: @response_catcher
  end

  # Returns the name and endpoint URL of the callback listening services registered for a given account.
  def test_list_registered_callbacks()
    # Parameters for the API call
    aname = '0252012345-00001'

    # Perform the API call through the SDK function
    result = @controller.list_registered_callbacks(aname)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '[{"accountName":"0252012345-00001","serviceName":"CarrierService","url"'\
      ':"http://10.120.102.147:50569/CallbackListener/Carrier.asmx"},{"account'\
      'Name":"0252012345-00001","password":"drowssap","serviceName":"DeviceUsa'\
      'ge","url":"http://10.120.102.147:50569/CallbackListener/Usage.asmx","us'\
      'ername":"zaffod"}]'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

  # You are responsible for creating and running a listening process on your server at that URL.
  def test_register_callback()
    # Parameters for the API call
    aname = 'TestAccount-2'
    body = RegisterCallbackRequest.from_hash(APIHelper.json_deserialize(
      '{"name":"CarrierService","url":"http://10.120.102.183:50559/CallbackLis'\
      'tener/CarrierServiceMessages.asmx"}'
    ))

    # Perform the API call through the SDK function
    result = @controller.register_callback(aname, body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"accountName":"122333444-00002","serviceName":"CarrierService"}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

  # Stops ThingSpace from sending callback messages for the specified account and service.
  def test_deregister_callback()
    # Parameters for the API call
    aname = '1223334444-00001'
    sname = 'CarrierService'

    # Perform the API call through the SDK function
    result = @controller.deregister_callback(aname, sname)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"accountName":"1223334444-00001","serviceName":"CarrierService"}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

end
