# thing_space_connectivity_management_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ThingSpaceConnectivityManagementApi
  #  thing_space_connectivity_management_api client class.
  class Client
    attr_reader :config

    # Returns the authentication class for easy access.
    def auth
      OAuth2
    end

    # Access to device_management controller.
    # @return [DeviceManagementController] Returns the controller instance.
    def device_management
      @device_management ||= DeviceManagementController.new config
    end

    # Access to accounts controller.
    # @return [AccountsController] Returns the controller instance.
    def accounts
      @accounts ||= AccountsController.new config
    end

    # Access to device_groups controller.
    # @return [DeviceGroupsController] Returns the controller instance.
    def device_groups
      @device_groups ||= DeviceGroupsController.new config
    end

    # Access to sms controller.
    # @return [SMSController] Returns the controller instance.
    def sms
      @sms ||= SMSController.new config
    end

    # Access to session_management controller.
    # @return [SessionManagementController] Returns the controller instance.
    def session_management
      @session_management ||= SessionManagementController.new config
    end

    # Access to connectivity_callbacks controller.
    # @return [ConnectivityCallbacksController] Returns the controller instance.
    def connectivity_callbacks
      @connectivity_callbacks ||= ConnectivityCallbacksController.new config
    end

    # Access to account_requests controller.
    # @return [AccountRequestsController] Returns the controller instance.
    def account_requests
      @account_requests ||= AccountRequestsController.new config
    end

    # Access to service_plans controller.
    # @return [ServicePlansController] Returns the controller instance.
    def service_plans
      @service_plans ||= ServicePlansController.new config
    end

    # Access to o_auth_authorization controller.
    # @return [OAuthAuthorizationController] Returns the controller instance.
    def o_auth_authorization
      @o_auth_authorization ||= OAuthAuthorizationController.new config
    end

    def initialize(connection: nil, adapter: :net_http_persistent, timeout: 60,
                   max_retries: 0, retry_interval: 1, backoff_factor: 2,
                   retry_statuses: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
                   retry_methods: %i[get put],
                   environment: Environment::PRODUCTION,
                   vz_m2_m_token: 'TODO: Replace',
                   o_auth_client_id: 'TODO: Replace',
                   o_auth_client_secret: 'TODO: Replace', o_auth_token: nil,
                   config: nil)
      @config = if config.nil?
                  Configuration.new(connection: connection, adapter: adapter,
                                    timeout: timeout, max_retries: max_retries,
                                    retry_interval: retry_interval,
                                    backoff_factor: backoff_factor,
                                    retry_statuses: retry_statuses,
                                    retry_methods: retry_methods,
                                    environment: environment,
                                    vz_m2_m_token: vz_m2_m_token,
                                    o_auth_client_id: o_auth_client_id,
                                    o_auth_client_secret: o_auth_client_secret,
                                    o_auth_token: o_auth_token)
                else
                  config
                end
    end
  end
end
